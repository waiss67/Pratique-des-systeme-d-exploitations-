#!/bin/sh
#groupe : Geoffrey BISCH, Waiss BAQUI
#liste erreur
# exit 1 : mauvaises options
# exit 2 : mauvais repertoire de sonde
# exit 3 : La sonde donnée n'existe pas
# exit 4 : le programme a été arreté a l'aide CTRL+C
# exit 5 : mauvais format de date
# exit 6 : nombre de mesure <= 0
# exit 7 : timer inférieur a 0
mesure=10
seconde=60
rep_sondes="./sondes"
rep_mesures="./mesures"
temp=/tmp/compteur$$

trap "echo \"CTRL+C has been pressed\" >&2 ; rm $temp; exit 4" 2
#########################################################
#							#
#		gestion des options			#
#							#
#########################################################

while getopts "n:i:s:m:" option
do
	case $option in

	n)#modifie le nombre de mesures
		mesure=$OPTARG
		if [ $mesure -lt 0 ]
		then
			echo "usage: $0 -n must be higher or equal than 1">&2
			exit 6
		fi
		;;

	i)#conversion des formats heures en seconde

		heure=$OPTARG
		[ $heure -gt 0 ]>/dev/null 2>&1
		if [ $? -le 1 ]
		then
			if [ $heure -lt 0 ]
			then
				echo "Usage: $0 -i timer should be higher than 0">&2
				exit 7
			fi
			seconde=$heure
		else
			heure=$(echo $heure | tr "[hH]" ":" | tr "[mM]" ":" | tr "[sS]" " ")
	 		date "+%T" -d "$heure" >/dev/null 2>&1 || date "+%H-%M-%S" -d "$heure">/dev/null 2>&1 || date "+%H/%M/%S" -d "$heure">/dev/null 2>&1 || date "+%H%M%S" -d "$heure">/dev/null 2>&1
			if [ $? -ne 0 ]
			then
				echo "Wrong date format">&2
				echo "Usage: $0 -i ">&2
				echo "format supported:">&2
				echo "HH:MM:SS ; HH-MM-SS ; HH/MM/SS ; HHMMSS ; --h--m--s; SS ">&2
				exit 5
			else
				tmpheure=$(echo $heure | tr ":" " " | tr "/" " " | tr "-" " " ) # !!!!!!!!!!!! modif oubli de rajout de / - et HHMMSS ne fonctionnera pas du fait que c'est un entier
				h=$(echo $tmpheure | awk '{print $1}')
				m=$(echo $tmpheure | awk '{print $2}')
				s=$(echo $tmpheure | awk '{print $3}')
				seconde=$((h*3600 + m*60 +s))
			fi
		fi
		;;

	s)#change le repertoire des sondes

		if [ -d $OPTARG ]
		then
			rep_sondes=$OPTARG
		else
			echo "not a repository">&2
			exit 2
		fi
		;;

	m)#change le repertoire des mesures
		if [ -d $OPTARG ]
		then
			rep_mesures=$OPTARG
		else
			rep_mesures=$OPTARG
			echo "repository $OPTARG created"
		fi;;
	\?)
		echo "Usage: ">&2
		echo "-m to change measure repository">&2
		echo "-s to change the seeker repository">&2
		echo "-i to change time between 2 measures">&2
		echo "-n to modify number of measures">&2
		echo "1 or more Args composed by the names of probes">&2
		exit 1;;
	esac
done
shift $((OPTIND-1)) #supprime toutes les options et leurs arguments
listeSonde=$*
###########################################################
#							  #
# 		Controle des arguments			  #
#							  #
###########################################################
if ! [ -d $rep_mesures ]
then
	mkdir $rep_mesures
fi

if [ $# -eq 0 ]
then
	echo "No probes specify:"
	echo "Probes list:"
	ls $rep_sondes
	read ligne
	listeSonde=$ligne
fi

for f in $listeSonde
do
	if ! [ -f $rep_sondes/$f ]
	then
		echo "$f unavailable probes">&2
		echo "probes list ">&2
		ls $rep_sondes
		exit 3
	fi
done

#Verification de l'existence d'un compteur et initialisation de tout les compteurs dans /tmp
#+ suppression du contenu eventuel du fichier compteur (dans le cas d'une erreur)
echo "">$temp>/dev/null 2>&1 
for f in $listeSonde
do
	if [ $($rep_sondes/$f -y) = Compteur ]
	then
		touch $temp>/dev/null 2>&1
		echo "$f: $($rep_sondes/$f) ">>$temp
	fi
done

###########################################################
#							  #
#		     lancement sondes			  #
#							  #
###########################################################
echo "mesure à faire: $mesure"
echo "intervalle entre deux mesures: $seconde seconde"
echo "repertoire sonde: $rep_sondes"
echo "repertoire mesure: $rep_mesures"
echo "liste des sondes à traiter: $listeSonde"

for i in $listeSonde
do
	echo "# $($rep_sondes/$i -t) / $(hostname) ">$rep_mesures/$i
done

while [ $mesure -ne 0 ]
do
	for i in $listeSonde
	do
		if [ $( $rep_sondes/$i -y) = Compteur ]
		then
			tmpIni=$(cat $temp | grep "$i:" | awk '{print $2}' )
			tmpSec=$($rep_sondes/$i)
			compte=$(((tmpSec-tmpIni)/seconde))
			if [ $compte -gt 0 ]
			then
				echo "$(date +%F) $(date +%T)	$compte">>$rep_mesures/$i
			fi
			sed -i "s/^$i:.*/$i: $tmpSec/" $temp
		else
			echo "$(date +%F) $(date +%T)	$($rep_sondes/$i)">>$rep_mesures/$i
		fi
	done
	sleep $seconde
	mesure=$((mesure-1))
	if [ $mesure -ne 0 ]
	then
		echo "$mesure mesure(s) restante "
	else
		echo "Mesure terminée"
	fi
done

rm -rf $temp
exit 0

